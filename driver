#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import CARA
import ExpectedReturns
import HARA
import matplotlib.pyplot as plt

# Set 1: q=0.05; \delta t = 1/12; q3 = 0.2586%; q4 = 0.91441%; t1 = 3; t2 = 4; t3 = 10; t4 = 15; 
# t5 = 25; S0 = 100,000; r = 0.02; \rho = 0.02; \alpha = 0.5; \beta = 1; \lambda = 0.02; \sigma = 0.1

# Expected Returns Utility Function
t=[0,3,6,9,12,15]
boundary = ExpectedReturns.ERLapseBoundary(S0=100000, r=0.02, lambd=0.02, sigma=0.1, dt=1/12, alpha=0.5, 
                                           beta = 1, N=36, rho=0.02, t=t,  q=0.05, Q=[0.002586,0.0091441])

plt.plot(t[1:3], [boundary[0][0][0], boundary[1]])
plt.title('Expected Returns Boundary')
plt.show()

# CARA Utility Function
CARA.lambda1draw(t, deltaT=1/12, alpha=0.5, beta=1, rho=0.02, S0=100000, sigma=0.1, n=36, Q=[0.002586,0.0091441], q=0.05)

# HARA Utility Function
boundary = HARA.LapseBoundary(S0=100000, r=0.02, lambd=0.02, sigma=0.1, dt=1/12, alpha=0.5, 
                              N=36, rho=0.02, t=t,  q=0.05, Q=[0.002586,0.0091441])

plt.plot(t[1:3], [boundary[0], boundary[1]])
plt.title('HARA Boundary')
plt.show()

# Set 2: q=0.05; \delta t = 1/12; q3 = 0.17642%; q4 = 0.64959%; t1 = 4; t2=7; t3 = 15; 
# t4 = 20; t5 = 30; S0 = 100,000; r = 0.02; \rho = 0.02; \alpha = 0.7; \beta = 1; lambda = 0.02; sigma = 0.01

# Expected Returns Utility Function
t=[0,4,7,15,20,30]
boundary = ExpectedReturns.ERLapseBoundary(S0=100000, r=0.02, lambd=0.02, sigma=0.01, dt=1/12, alpha=0.7, 
                                           beta = 1, N=36, rho=0.02, t=t,  q=0.05, Q=[0.0017642,0.0064959])

plt.plot(t[1:3], [boundary[0][0][0], boundary[1]])
plt.title('Expected Returns Boundary')
plt.show()

# CARA Utility Function
CARA.lambda1draw(t, deltaT=1/12, alpha=0.7, beta=1, rho=0.02, S0=100000, sigma=0.01, n=36, Q=[0.0017642,0.0064959], q=0.05)

# HARA Utility Function
boundary = HARA.LapseBoundary(S0=100000, r=0.02, lambd=0.02, sigma=0.01, dt=1/12, alpha=0.7, 
                              N=36, rho=0.02, t=t,  q=0.05, Q=[0.0017642,0.0064959])

plt.plot(t[1:3], [boundary[0], boundary[1]])
plt.title('HARA Boundary')
plt.show()